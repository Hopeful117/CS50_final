name: Deploy to Server

on:
  push:
    branches:
      - main  # Déclenche le workflow lorsqu'il y a un push sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Exécute le job sur une machine virtuelle Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: Add known_hosts
        run: |
              ssh-keyscan hopeful117.duckdns.org >> ~/.ssh/known_hosts
          
      - name: Check if virtual environment exists
        run: |
            ssh -o StrictHostKeyChecking=no ludo@hopeful117.duckdns.org <<EOF
              if [ ! -d "/var/www/DLL/CS50_final/venv" ]; then
                echo "Environment not found. Creating virtual environment..."
                python3 -m venv /var/www/DLL/CS50_final/venv  # Crée l'environnement virtuel si inexistant
              else
                echo "Environment already exists. Skipping creation."
              fi
            EOF

      - name: Install or Update dependencies
        run: |
            ssh -o StrictHostKeyChecking=no ludo@hopeful117.duckdns.org <<EOF
              cd /var/www/DLL/CS50_final
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt  # Installe les dépendances ou les met à jour
            EOF

      - name: Install rsync
        run: |
            sudo apt-get update
            sudo apt-get install -y rsync

      - name: Deploy via rsync
        run: |
            rsync -avz --no-perms --delete ./ ludo@hopeful117.duckdns.org:/var/www/DLL/CS50_final

      - name: SSH into the server and restart services
        run: |
          ssh -o StrictHostKeyChecking=no ludo@hopeful117.duckdns.org << 'EOF'
            cd /var/www/DLL/CS50_final
            source venv/bin/activate
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
