name: Deploy to Server

on:
  push:
    branches:
      - main  # Déclenche le workflow lorsqu'il y a un push sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Exécute le job sur une machine virtuelle Ubuntu
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
          
          # Utiliser la version Python de votre choix

      - name: Remove old virtual environment
        run: |
            if [ -d "venv" ]; then
              rm -rf venv  # Supprime le dossier venv existant
            fi

      - name: Create virtual environment
        run: |
              python -m venv venv  # Crée un environnement virtuel dans le dossier 'venv'
              source venv/bin/activate  # Active l'environnement virtuel
    

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known_hosts
        run: |
          ssh-keyscan hopeful117.duckdns.org >> ~/.ssh/known_hosts
      

      - name: Install rsync
        run: |
            sudo apt-get update
            sudo apt-get install -y rsync
      
      - name: Deploy via rsync
        run: |
            rsync -avz --no-perms --delete ./ ludo@hopeful117.duckdns.org:/var/www/DLL/CS50_final

      
      - name: SSH into the server and restart services
        run: |
          ssh -o StrictHostKeyChecking=no -t ludo@hopeful117.duckdns.org << 'EOF'
            cd /var/www/DLL/CS50_final
            source venv/bin/activate
            # Assurez-vous que vous redémarrez le service Gunicorn ou Nginx si nécessaire
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
